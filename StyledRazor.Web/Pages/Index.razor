@page "/"
@using StyledRazor.Lib.Styles

<Stack>
  <Box>First</Box>
  
  <Stack Gutter="@Tokens.SpacingM">
    <Grid BaseWidth="200px">
      <Button>Default</Button>
      <Button Styled="@DynamicButton" @onclick="@Click">
        Click me
      </Button>
    </Grid>
  </Stack>
  
  <Box Horizontal="@Tokens.SpacingM" Height="@Tokens.SpacingXl">
    <Cluster Space="@Tokens.SpacingXl" NoPadding Stretch>
      <Box>Cluster</Box>
      <Box Start>Start</Box>
      <Box End>End</Box>
    </Cluster>
  </Box>  
  
  <Stack Gutter="@Tokens.SpacingS">
    <Grid Gutter="@Tokens.SpacingS" ColsLg="4" ColsMd="2" ColsSm="1" Ratio="1">
      @for (var i = 1; i < 5; i++ )
      {
        var content = "Item " + i;
        <GridItem>
          <Background Color="lightgrey">
            <Cover>
              <Container Centered>
                @content  
              </Container>
              <Cluster>
                Cluster
              </Cluster>
            </Cover>
          </Background>
        </GridItem>
      }
    </Grid>
      
    <Grid Gutter="@Tokens.SpacingS" BaseWidth="@Tokens.SpacingXxl">
      @for (var i = 5; i < 8; i++ )
      {
        var content = "Item " + i;
        var item = i;
        <GridItem Double="@(item == 6)" Full="@(item == 7)">
          <Background Color="lightgrey">
            <Cover>
              <Container Centered>
                @content  
              </Container>
              <Cluster>
                Cluster
              </Cluster>
            </Cover>
          </Background>
        </GridItem>
      }
    </Grid>
  </Stack>
</Stack>

@code
{
  Styled DynamicButton { get; set; } = Button.GreyButton;

  private void Click() => DynamicButton =
    DynamicButton.Name == "GreyButton"
      ? Button.AlertButton
      : Button.GreyButton;
}