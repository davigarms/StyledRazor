@using BlazorApp.Styles
<div
	class=@_styled.ClassName
	style="
	--cover-min-height: @MinimumHeight;
	--cover-padding: @Padding;
	--cover-space: @Space;
	"	
>
	@ChildContent
	
	@_styled.Render(@"
        .wrapper {
	        display: flex;
	        flex-direction: column;
	        min-height: var(--cover-min-height);
	        padding: var(--cover-padding);
	    }
	    
	    .wrapper > * {
	        margin-top: var(--cover-space);
	        margin-bottom: var(--cover-space);
	    }
	    
	    .wrapper > :first-child:not([centered]) {
	        margin-top: 0;
	    }
	    
	    .wrapper > :last-child:not([centered]) {
	        margin-bottom: 0;
	    }
	    
	    .wrapper > [centered] {
	        margin-top: auto;
	        margin-bottom: auto;
	    }
    ")
</div>

@code {
	private Styled _styled = new("cover");
	
	private string _className = Utils.GenerateUniqueClassName("cover");
	
	[Parameter]
	public RenderFragment ChildContent { get; set; }

	[Parameter]
	public string MinimumHeight { get; set; } = "100vh";

	[Parameter]
	public string Space { get; set; } = StyleDictionary.SpacingM;

	[Parameter]
	public bool NoPadding { get; set; }

	private string Padding => NoPadding ? "0" : Space;
}