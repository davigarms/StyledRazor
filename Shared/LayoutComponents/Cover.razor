<div
	class=@_className
	style="
	--cover-min-height: @MinimumHeight;
	--cover-padding: @Padding;
	--cover-space: @Space;
	"	
>
	@ChildContent
	
	<style>
		.@_className {
	        display: flex;
	        flex-direction: column;
	        min-height: var(--cover-min-height);
	        padding: var(--cover-padding);
	    }
	    
	    .@_className > * {
	        margin-top: var(--cover-space);
	        margin-bottom: var(--cover-space);
	    }
	    
	    .@_className > :first-child:not([centered]) {
	        margin-top: 0;
	    }
	    
	    .@_className > :last-child:not([centered]) {
	        margin-bottom: 0;
	    }
	    
	    .@_className > [centered] {
	        margin-top: auto;
	        margin-bottom: auto;
	    }
	</style>
</div>


@code {
	private string _className = Utils.GenerateUniqueClassName("cover");
	
	[Parameter]
	public RenderFragment ChildContent { get; set; }

	[Parameter]
	public string MinimumHeight { get; set; } = "100vh";

	[Parameter]
	public string Space { get; set; } = "1rem";

	[Parameter]
	public bool NoPadding { get; set; }

	private string Padding => NoPadding ? "0" : Space;
}