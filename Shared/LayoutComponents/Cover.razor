@using BlazorApp.Lib.Styled
@using BlazorApp.Lib.Styles
@(new Styled()
	.As("cover")
	.WithContent(ChildContent)
	.WithStyle($@"
		--cover-min-height: {@MinimumHeight};
		--cover-padding: {@Padding};
		--cover-space: {@Space};
	")
	.WithCss(@"
		div {
	        display: flex;
	        flex-direction: column;
	        min-height: var(--cover-min-height);
	        padding: var(--cover-padding);
	    }
	    
	    div > * {
	        margin-top: var(--cover-space);
	        margin-bottom: var(--cover-space);
	    }
	    
	    div > :first-child:not([centered]) {
	        margin-top: 0;
	    }
	    
	    div > :last-child:not([centered]) {
	        margin-bottom: 0;
	    }
	    
	    div > [centered] {
	        margin-top: auto;
	        margin-bottom: auto;
	    }
	")
	.Render())

@code {
	private string Padding => NoPadding ? "0" : Space;
	
	[Parameter]
	public RenderFragment ChildContent { get; set; }

	[Parameter]
	public string MinimumHeight { get; set; } = "100vh";

	[Parameter]
	public string Space { get; set; } = StyleDictionary.SpacingM;

	[Parameter]
	public bool NoPadding { get; set; }
}